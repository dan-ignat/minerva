plugins
{
    id 'java'

    id 'org.springframework.boot' version '2.2.4.RELEASE'

    id 'io.freefair.lombok' version '5.2.1'

    id 'distribution'
}

lombok {
    /*
     * This is necessary so that Jackson can (de)serialize JSON to/from immutable Lombok @Value classes.  Jackson added
     * support for this (via @ConstructorProperties) in 2.7.0:
     * https://github.com/fasterxml/jackson-databind/issues/905
     * https://stackoverflow.com/questions/49999492/immutable-lombok-annotated-class-with-jackson
     */
    config['lombok.anyConstructor.addConstructorProperties'] = 'true'
}

// This enables the preview features for JDK 13 that we use in Minerva, e.g. text blocks and switch expressions
tasks.withType(JavaCompile).each
{
    it.options.compilerArgs.add('--enable-preview')
}

dependencies
{
    implementation          'org.springframework.boot:spring-boot-starter:2.2.4.RELEASE'
    implementation          'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    implementation          'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.2'
    implementation          'com.networknt:json-schema-validator:1.0.32'
    implementation          'com.google.guava:guava:28.2-jre'
    implementation          'org.apache.commons:commons-lang3:3.9'
    // Commons IO seems to be an oddity within Apache Commons, in that the latest versions don't use the
    // 'org.apache.commons' groupId for some reason
    implementation          'commons-io:commons-io:2.6'
    implementation          'com.codepoetics:protonpack:1.16'
    implementation          'org.hamcrest:hamcrest:2.2'
    implementation          'name.ignat:ignat-commons:2.0.0'
    //implementation          'info.picocli:picocli-spring-boot-starter:4.2.0'
    implementation          'org.apache.poi:poi:4.1.2'
    implementation          'org.apache.poi:poi-ooxml:4.1.2'
    implementation          'com.opencsv:opencsv:5.1'
    implementation          'com.google.flogger:flogger:0.5'
    runtimeOnly             'com.google.flogger:flogger-system-backend:0.5'

    testImplementation      'org.springframework.boot:spring-boot-starter-test:2.2.4.RELEASE'
    /*testImplementation('org.springframework.boot:spring-boot-starter-test:2.2.4.RELEASE')
    {
        exclude group: 'junit', module: 'junit'
    }*/
    testImplementation      'org.junit.jupiter:junit-jupiter:5.6.1'
    //testImplementation      'org.easymock:easymock:4.2'
}

// Is this actually necessary?
/*test
{
    useJUnitPlatform()

    testLogging
    {
        events 'passed', 'skipped', 'failed'
    }
}*/

repositories
{
    jcenter()
}

bootJar
{
    mainClassName = 'name.ignat.minerva.MinervaApp'

    /*
    Exclude the version from the archiveFileName, because it goes against convention.  The distribution file name has
    the version, and the bootJar inside it should be named consistently, so users can refer to it (in their scripts,
    etc.) by the same name, regardless of the release version.
    */
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

distributions
{
    main
    {
        contents
        {
            into('/')
            {
                from "${buildDir}/libs"
                from 'README.md'
            }
            into('/docs')    { from 'docs' }
            into('/samples') { from 'samples' }
        }
    }
}

tasks.withType(Tar)
{
    compression = Compression.GZIP
    extension = 'tar.gz'
}

// You'd think this would be the case by default, but it isn't
assembleDist.dependsOn(bootJar)
