package name.ignat.minerva.util;

import static java.util.stream.Collectors.joining;

import java.util.Collection;

import org.apache.commons.lang3.builder.ToStringBuilder;

/**
 * Interface for a class that has a canonical string representation.
 * <p>
 * While it's become common to implement {@link #toString()} for debugging purposes (often auto-generated by IDEs or
 * libraries such as Project Lombok or Apache Commons Lang's {@link ToStringBuilder}), some classes have a need for a
 * canonical string representation that's separate from {@code toString()}.
 * 
 * @author Dan Ignat
 */
public interface Canonizable
{
    static String toCanonical(Collection<? extends Canonizable> canonizables)
    {
        return canonizables.stream().map(Canonizable::toCanonical).collect(joining(", "));
    }

    String toCanonical();
}
